def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def getGitTag = {->
    def cmd = "git describe --tags --abbrev=0"
    return cmd.execute().text.trim()
}


def getVersionTag = { ->
    def tag = getGitTag()
    if(tag.startsWith("v") || tag.startsWith("V")){
        tag = tag.substring(1)
    }
    if(tag == null || tag.equals("")){
        tag = "1.0"
    }
    return tag
}
def getVersionCode = {->
    def cmd = "git rev-list HEAD --first-parent --count"
    return cmd.execute().text.trim().toInteger()
}


// versionName 增加最后一笔提交code 方便回滚定位问题
def getVersionName = { ->

    def cmd = "git rev-parse --short HEAD"
    def commit = cmd.execute().text.trim().toString()
    return getVersionTag()+"."+getVersionCode()+"-"+commit
}


def buildTime(){
    return new Date().format("yyyy-MM-dd")
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 27

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "com.jiangxq.filmdev"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode getVersionCode()
        versionName getVersionName()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            buildConfigField("boolean", "API_ENV", "true")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField("boolean", "API_ENV", "false")
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
